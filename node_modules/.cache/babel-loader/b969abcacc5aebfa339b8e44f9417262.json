{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { listArray } from './Arrays';\nimport Input from './Input';\nimport './app.css'; // function App() {\n//   const [checkedState, setCheckedState] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n// const [expanded, setExpanded] = useState(\n//   new Array(listArray.length).fill(false)\n//   );\n// const [checkedStateSub, setCheckedStateSub] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n//   const handleOnChange = (props) => {\n//     const updatedCheckedState = checkedState.map((item, index) =>\n//       index === props ? !item : item\n//   ); \n//   const setExpanded = expanded.map((item, index) =>\n//   index === props ? !item : item\n// ); \n//   setCheckedState(updatedCheckedState);\n//   setExpanded(expanded)\n//   console.log(expanded)\n//   }\n//   const handleOnChangeSub = (props) => {\n//     const updatedCheckedStateSub = checkedStateSub.map((item, index) =>\n//       index === props ? !item : item\n//     );\n//   setCheckedStateSub(updatedCheckedStateSub)\n//   }\n// return (\n//     <ul className=\"toppings-list\">\n//       <h1>{listArray.head}</h1> \n//       {listArray.data.map(({ name, values }, index) => {\n//         return (\n//             <div className=\"toppings-list-item\">\n//               <div className=\"left-section\">\n//           <li key={index}>\n//               <Input \n//                   item={name} \n//                   index={index} \n//                   checkedState={checkedState} \n//                   handleOnChange={() => handleOnChange}\n//                   />      \n//                   </li>      \n//             <li key={index} className={expanded ? 'expanded' : 'collapsed'}>\n//                   {values.map((sub) => \n//                     <Input \n//                     item={sub.info} \n//                     index={index} \n//                     checkedState= { checkedStateSub } \n//                     handleOnChange={() => handleOnChangeSub}\n//                     /> \n//                     )}\n//             </li>\n//               </div>\n//             </div>\n//         );\n//       })}\n//     </ul>\n// );\n// }\n// export default App;","map":{"version":3,"names":["useState","useCallback","listArray","Input"],"sources":["C:/Users/JAN/OneDrive/Documents/code/listy/jan-olejarz-list/src/App.js"],"sourcesContent":["import {  useState, useCallback  } from 'react'\nimport {  listArray } from './Arrays'\nimport Input from './Input'\nimport './app.css'\n\n// function App() {\n\n//   const [checkedState, setCheckedState] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n\n// const [expanded, setExpanded] = useState(\n//   new Array(listArray.length).fill(false)\n//   );\n\n// const [checkedStateSub, setCheckedStateSub] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n\n//   const handleOnChange = (props) => {\n    \n//     const updatedCheckedState = checkedState.map((item, index) =>\n//       index === props ? !item : item\n//   ); \n\n//   const setExpanded = expanded.map((item, index) =>\n//   index === props ? !item : item\n// ); \n\n//   setCheckedState(updatedCheckedState);\n\n//   setExpanded(expanded)\n\n//   console.log(expanded)\n\n//   }\n\n//   const handleOnChangeSub = (props) => {\n//     const updatedCheckedStateSub = checkedStateSub.map((item, index) =>\n//       index === props ? !item : item\n//     );\n\n//   setCheckedStateSub(updatedCheckedStateSub)\n//   }\n\n// return (\n//     <ul className=\"toppings-list\">\n//       <h1>{listArray.head}</h1> \n      \n//       {listArray.data.map(({ name, values }, index) => {\n//         return (\n          \n//             <div className=\"toppings-list-item\">\n//               <div className=\"left-section\">\n//           <li key={index}>\n         \n//               <Input \n//                   item={name} \n//                   index={index} \n//                   checkedState={checkedState} \n//                   handleOnChange={() => handleOnChange}\n//                   />      \n                  \n//                   </li>      \n                \n//             <li key={index} className={expanded ? 'expanded' : 'collapsed'}>\n//                   {values.map((sub) => \n//                     <Input \n//                     item={sub.info} \n//                     index={index} \n//                     checkedState= { checkedStateSub } \n//                     handleOnChange={() => handleOnChangeSub}\n//                     /> \n//                     )}\n//             </li>\n\n                    \n    \n\n//               </div>\n//             </div>\n//         );\n//       })}\n//     </ul>\n// );\n// }\n\n// export default App;"],"mappings":"AAAA,SAAUA,QAAV,EAAoBC,WAApB,QAAwC,OAAxC;AACA,SAAUC,SAAV,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}