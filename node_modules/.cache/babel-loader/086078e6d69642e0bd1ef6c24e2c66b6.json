{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAN\\\\OneDrive\\\\Documents\\\\code\\\\listy\\\\jan-olejarz-list\\\\src\\\\App.js\";\nimport { useState, useCallback } from 'react';\nimport { listArray } from './Arrays';\nimport Input from './Input';\nimport './app.css'; // function App() {\n//   const [checkedState, setCheckedState] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n// const [expanded, setExpanded] = useState(\n//   new Array(listArray.length).fill(false)\n//   );\n// const [checkedStateSub, setCheckedStateSub] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n//   const handleOnChange = (props) => {\n//     const updatedCheckedState = checkedState.map((item, index) =>\n//       index === props ? !item : item\n//   ); \n//   const setExpanded = expanded.map((item, index) =>\n//   index === props ? !item : item\n// ); \n//   setCheckedState(updatedCheckedState);\n//   setExpanded(expanded)\n//   console.log(expanded)\n//   }\n//   const handleOnChangeSub = (props) => {\n//     const updatedCheckedStateSub = checkedStateSub.map((item, index) =>\n//       index === props ? !item : item\n//     );\n//   setCheckedStateSub(updatedCheckedStateSub)\n//   }\n// return (\n//     <ul className=\"toppings-list\">\n//       <h1>{listArray.head}</h1> \n//       {listArray.data.map(({ name, values }, index) => {\n//         return (\n//             <div className=\"toppings-list-item\">\n//               <div className=\"left-section\">\n//           <li key={index}>\n//               <Input \n//                   item={name} \n//                   index={index} \n//                   checkedState={checkedState} \n//                   handleOnChange={() => handleOnChange}\n//                   />      \n//                   </li>      \n//             <li key={index} className={expanded ? 'expanded' : 'collapsed'}>\n//                   {values.map((sub) => \n//                     <Input \n//                     item={sub.info} \n//                     index={index} \n//                     checkedState= { checkedStateSub } \n//                     handleOnChange={() => handleOnChangeSub}\n//                     /> \n//                     )}\n//             </li>\n//               </div>\n//             </div>\n//         );\n//       })}\n//     </ul>\n// );\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Accordion Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion\",\n      children: listArray.map(_ref => {\n        let {\n          title,\n          content\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Accordion, {\n          title: title,\n          content: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useCallback","listArray","Input","App","map","title","content"],"sources":["C:/Users/JAN/OneDrive/Documents/code/listy/jan-olejarz-list/src/App.js"],"sourcesContent":["import {  useState, useCallback  } from 'react'\nimport {  listArray } from './Arrays'\nimport Input from './Input'\nimport './app.css'\n\n// function App() {\n\n//   const [checkedState, setCheckedState] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n\n// const [expanded, setExpanded] = useState(\n//   new Array(listArray.length).fill(false)\n//   );\n\n// const [checkedStateSub, setCheckedStateSub] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n\n//   const handleOnChange = (props) => {\n    \n//     const updatedCheckedState = checkedState.map((item, index) =>\n//       index === props ? !item : item\n//   ); \n\n//   const setExpanded = expanded.map((item, index) =>\n//   index === props ? !item : item\n// ); \n\n//   setCheckedState(updatedCheckedState);\n\n//   setExpanded(expanded)\n\n//   console.log(expanded)\n\n//   }\n\n//   const handleOnChangeSub = (props) => {\n//     const updatedCheckedStateSub = checkedStateSub.map((item, index) =>\n//       index === props ? !item : item\n//     );\n\n//   setCheckedStateSub(updatedCheckedStateSub)\n//   }\n\n// return (\n//     <ul className=\"toppings-list\">\n//       <h1>{listArray.head}</h1> \n      \n//       {listArray.data.map(({ name, values }, index) => {\n//         return (\n          \n//             <div className=\"toppings-list-item\">\n//               <div className=\"left-section\">\n//           <li key={index}>\n         \n//               <Input \n//                   item={name} \n//                   index={index} \n//                   checkedState={checkedState} \n//                   handleOnChange={() => handleOnChange}\n//                   />      \n                  \n//                   </li>      \n                \n//             <li key={index} className={expanded ? 'expanded' : 'collapsed'}>\n//                   {values.map((sub) => \n//                     <Input \n//                     item={sub.info} \n//                     index={index} \n//                     checkedState= { checkedStateSub } \n//                     handleOnChange={() => handleOnChangeSub}\n//                     /> \n//                     )}\n//             </li>\n\n                    \n    \n\n//               </div>\n//             </div>\n//         );\n//       })}\n//     </ul>\n// );\n// }\n\n// export default App;\n\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>React Accordion Demo</h1>\n      <div className=\"accordion\">\n        {listArray.map(({ title, content }) => (\n          <Accordion title={title} content={content} />\n        ))}\n      </div>\n    </div>\n  );\n    }\nexport default App;"],"mappings":";AAAA,SAAUA,QAAV,EAAoBC,WAApB,QAAwC,OAAxC;AACA,SAAUC,SAAV,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA,SAASC,GAAT,GAAe;EACb,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGF,SAAS,CAACG,GAAV,CAAc;QAAA,IAAC;UAAEC,KAAF;UAASC;QAAT,CAAD;QAAA,oBACb,QAAC,SAAD;UAAW,KAAK,EAAED,KAAlB;UAAyB,OAAO,EAAEC;QAAlC;UAAA;UAAA;UAAA;QAAA,QADa;MAAA,CAAd;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUG;;KAXIH,G;AAYT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}