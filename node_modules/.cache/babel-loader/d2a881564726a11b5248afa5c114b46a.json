{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAN\\\\OneDrive\\\\Documents\\\\code\\\\listy\\\\jan-olejarz-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { listArray } from './Arrays';\nimport Input from './Input';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [checkedState, setCheckedState] = useState(new Array(listArray.length).fill(false));\n  const [expanded, setExpanded] = useState(new Array(listArray.length).fill(false));\n  const [checkedStateSub, setCheckedStateSub] = useState(new Array(listArray.length).fill(false));\n\n  const handleOnChange = props => {\n    const updatedCheckedState = checkedState.map((item, index) => index === props ? !item : item);\n    const setExpanded = expanded.map((item, index) => index === props ? !item : item);\n    setCheckedState(updatedCheckedState);\n    setExpanded(expanded);\n    console.log(expanded);\n  };\n\n  const handleOnChangeSub = props => {\n    const updatedCheckedStateSub = checkedStateSub.map((item, index) => index === props ? !item : item);\n    setCheckedStateSub(updatedCheckedStateSub);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"toppings-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: listArray.head\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), listArray.data.map((_ref, index) => {\n      let {\n        name,\n        values\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toppings-list-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              item: name,\n              index: index,\n              checkedState: checkedState,\n              handleOnChange: () => handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: expanded ? 'expanded' : 'collapsed',\n            children: values.map(sub => /*#__PURE__*/_jsxDEV(Input, {\n              item: sub.info,\n              index: index,\n              checkedState: checkedStateSub,\n              handleOnChange: () => handleOnChangeSub\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FxWAccYqDvg5N1thE0hkIu918TA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useCallback","listArray","Input","App","checkedState","setCheckedState","Array","length","fill","expanded","setExpanded","checkedStateSub","setCheckedStateSub","handleOnChange","props","updatedCheckedState","map","item","index","console","log","handleOnChangeSub","updatedCheckedStateSub","head","data","name","values","sub","info"],"sources":["C:/Users/JAN/OneDrive/Documents/code/listy/jan-olejarz-list/src/App.js"],"sourcesContent":["import {  useState, useCallback  } from 'react'\nimport {  listArray } from './Arrays'\nimport Input from './Input'\nimport './app.css'\n\nfunction App() {\n\n  const [checkedState, setCheckedState] = useState(\n    new Array(listArray.length).fill(false)\n);\n\nconst [expanded, setExpanded] = useState(\n  new Array(listArray.length).fill(false)\n  );\n\nconst [checkedStateSub, setCheckedStateSub] = useState(\n    new Array(listArray.length).fill(false)\n);\n\n  const handleOnChange = (props) => {\n    \n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === props ? !item : item\n  ); \n\n  const setExpanded = expanded.map((item, index) =>\n  index === props ? !item : item\n); \n\n  setCheckedState(updatedCheckedState);\n\n  setExpanded(expanded)\n\n  console.log(expanded)\n\n  }\n\n  const handleOnChangeSub = (props) => {\n    const updatedCheckedStateSub = checkedStateSub.map((item, index) =>\n      index === props ? !item : item\n    );\n\n  setCheckedStateSub(updatedCheckedStateSub)\n  }\n\nreturn (\n    <ul className=\"toppings-list\">\n      <h1>{listArray.head}</h1> \n      \n      {listArray.data.map(({ name, values }, index) => {\n        return (\n          \n            <div className=\"toppings-list-item\">\n              <div className=\"left-section\">\n          <li key={index}>\n         \n              <Input \n                  item={name} \n                  index={index} \n                  checkedState={checkedState} \n                  handleOnChange={() => handleOnChange}\n                  />      \n                  \n                  </li>      \n                \n            <li key={index} className={expanded ? 'expanded' : 'collapsed'}>\n                  {values.map((sub) => \n                    <Input \n                    item={sub.info} \n                    index={index} \n                    checkedState= { checkedStateSub } \n                    handleOnChange={() => handleOnChangeSub}\n                    /> \n                    )}\n            </li>\n\n                    \n    \n\n              </div>\n            </div>\n        );\n      })}\n    </ul>\n);\n}\n\nexport default App;"],"mappings":";;;AAAA,SAAUA,QAAV,EAAoBC,WAApB,QAAwC,OAAxC;AACA,SAAUC,SAAV,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAC9C,IAAIO,KAAJ,CAAUL,SAAS,CAACM,MAApB,EAA4BC,IAA5B,CAAiC,KAAjC,CAD8C,CAAhD;EAIF,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CACtC,IAAIO,KAAJ,CAAUL,SAAS,CAACM,MAApB,EAA4BC,IAA5B,CAAiC,KAAjC,CADsC,CAAxC;EAIA,MAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAClD,IAAIO,KAAJ,CAAUL,SAAS,CAACM,MAApB,EAA4BC,IAA5B,CAAiC,KAAjC,CADkD,CAAtD;;EAIE,MAAMK,cAAc,GAAIC,KAAD,IAAW;IAEhC,MAAMC,mBAAmB,GAAGX,YAAY,CAACY,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAC3CA,KAAK,KAAKJ,KAAV,GAAkB,CAACG,IAAnB,GAA0BA,IADA,CAA5B;IAIF,MAAMP,WAAW,GAAGD,QAAQ,CAACO,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KACjCA,KAAK,KAAKJ,KAAV,GAAkB,CAACG,IAAnB,GAA0BA,IADN,CAApB;IAIAZ,eAAe,CAACU,mBAAD,CAAf;IAEAL,WAAW,CAACD,QAAD,CAAX;IAEAU,OAAO,CAACC,GAAR,CAAYX,QAAZ;EAEC,CAhBD;;EAkBA,MAAMY,iBAAiB,GAAIP,KAAD,IAAW;IACnC,MAAMQ,sBAAsB,GAAGX,eAAe,CAACK,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KACjDA,KAAK,KAAKJ,KAAV,GAAkB,CAACG,IAAnB,GAA0BA,IADG,CAA/B;IAIFL,kBAAkB,CAACU,sBAAD,CAAlB;EACC,CAND;;EAQF,oBACI;IAAI,SAAS,EAAC,eAAd;IAAA,wBACE;MAAA,UAAKrB,SAAS,CAACsB;IAAf;MAAA;MAAA;MAAA;IAAA,QADF,EAGGtB,SAAS,CAACuB,IAAV,CAAeR,GAAf,CAAmB,OAAmBE,KAAnB,KAA6B;MAAA,IAA5B;QAAEO,IAAF;QAAQC;MAAR,CAA4B;MAC/C,oBAEI;QAAK,SAAS,EAAC,oBAAf;QAAA,uBACE;UAAK,SAAS,EAAC,cAAf;UAAA,wBACJ;YAAA,uBAEI,QAAC,KAAD;cACI,IAAI,EAAED,IADV;cAEI,KAAK,EAAEP,KAFX;cAGI,YAAY,EAAEd,YAHlB;cAII,cAAc,EAAE,MAAMS;YAJ1B;cAAA;cAAA;cAAA;YAAA;UAFJ,GAASK,KAAT;YAAA;YAAA;YAAA;UAAA,QADI,eAYF;YAAgB,SAAS,EAAET,QAAQ,GAAG,UAAH,GAAgB,WAAnD;YAAA,UACOiB,MAAM,CAACV,GAAP,CAAYW,GAAD,iBACV,QAAC,KAAD;cACA,IAAI,EAAEA,GAAG,CAACC,IADV;cAEA,KAAK,EAAEV,KAFP;cAGA,YAAY,EAAIP,eAHhB;cAIA,cAAc,EAAE,MAAMU;YAJtB;cAAA;cAAA;cAAA;YAAA,QADD;UADP,GAASH,KAAT;YAAA;YAAA;YAAA;UAAA,QAZE;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFJ;IAgCD,CAjCA,CAHH;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAwCC;;GAhFQf,G;;KAAAA,G;AAkFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}