{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAN\\\\OneDrive\\\\Documents\\\\code\\\\listy\\\\jan-olejarz-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { listArray } from './Arrays';\nimport Input from './Input';\nimport './app.css'; // function App() {\n//   const [checkedState, setCheckedState] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n// const [expanded, setExpanded] = useState(\n//   new Array(listArray.length).fill(false)\n//   );\n// const [checkedStateSub, setCheckedStateSub] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n//   const handleOnChange = (props) => {\n//     const updatedCheckedState = checkedState.map((item, index) =>\n//       index === props ? !item : item\n//   ); \n//   const setExpanded = expanded.map((item, index) =>\n//   index === props ? !item : item\n// ); \n//   setCheckedState(updatedCheckedState);\n//   setExpanded(expanded)\n//   console.log(expanded)\n//   }\n//   const handleOnChangeSub = (props) => {\n//     const updatedCheckedStateSub = checkedStateSub.map((item, index) =>\n//       index === props ? !item : item\n//     );\n//   setCheckedStateSub(updatedCheckedStateSub)\n//   }\n// return (\n//     <ul className=\"toppings-list\">\n//       <h1>{listArray.head}</h1> \n//       {listArray.data.map(({ name, values }, index) => {\n//         return (\n//             <div className=\"toppings-list-item\">\n//               <div className=\"left-section\">\n//           <li key={index}>\n//               <Input \n//                   item={name} \n//                   index={index} \n//                   checkedState={checkedState} \n//                   handleOnChange={() => handleOnChange}\n//                   />      \n//                   </li>      \n//             <li key={index} className={expanded ? 'expanded' : 'collapsed'}>\n//                   {values.map((sub) => \n//                     <Input \n//                     item={sub.info} \n//                     index={index} \n//                     checkedState= { checkedStateSub } \n//                     handleOnChange={() => handleOnChangeSub}\n//                     /> \n//                     )}\n//             </li>\n//               </div>\n//             </div>\n//         );\n//       })}\n//     </ul>\n// );\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [clicked, setClicked] = useState(false);\n\n  const toggle = index => {\n    if (clicked === index) {\n      //if clicked question is already active, then close it\n      return setClicked(null);\n    }\n\n    setClicked(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n    value: {\n      color: '#00FFB9',\n      size: '25px'\n    },\n    children: /*#__PURE__*/_jsxDEV(AccordionSection, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: Data.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Wrap, {\n              onClick: () => toggle(index),\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: item.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: clicked === index ? /*#__PURE__*/_jsxDEV(FiMinus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 46\n                }, this) : /*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), clicked === index ? /*#__PURE__*/_jsxDEV(Dropdown, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useCallback","listArray","Input","App","clicked","setClicked","toggle","index","color","size","Data","map","item","question","answer"],"sources":["C:/Users/JAN/OneDrive/Documents/code/listy/jan-olejarz-list/src/App.js"],"sourcesContent":["import {  useState, useCallback  } from 'react'\nimport {  listArray } from './Arrays'\nimport Input from './Input'\nimport './app.css'\n\n// function App() {\n\n//   const [checkedState, setCheckedState] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n\n// const [expanded, setExpanded] = useState(\n//   new Array(listArray.length).fill(false)\n//   );\n\n// const [checkedStateSub, setCheckedStateSub] = useState(\n//     new Array(listArray.length).fill(false)\n// );\n\n//   const handleOnChange = (props) => {\n    \n//     const updatedCheckedState = checkedState.map((item, index) =>\n//       index === props ? !item : item\n//   ); \n\n//   const setExpanded = expanded.map((item, index) =>\n//   index === props ? !item : item\n// ); \n\n//   setCheckedState(updatedCheckedState);\n\n//   setExpanded(expanded)\n\n//   console.log(expanded)\n\n//   }\n\n//   const handleOnChangeSub = (props) => {\n//     const updatedCheckedStateSub = checkedStateSub.map((item, index) =>\n//       index === props ? !item : item\n//     );\n\n//   setCheckedStateSub(updatedCheckedStateSub)\n//   }\n\n// return (\n//     <ul className=\"toppings-list\">\n//       <h1>{listArray.head}</h1> \n      \n//       {listArray.data.map(({ name, values }, index) => {\n//         return (\n          \n//             <div className=\"toppings-list-item\">\n//               <div className=\"left-section\">\n//           <li key={index}>\n         \n//               <Input \n//                   item={name} \n//                   index={index} \n//                   checkedState={checkedState} \n//                   handleOnChange={() => handleOnChange}\n//                   />      \n                  \n//                   </li>      \n                \n//             <li key={index} className={expanded ? 'expanded' : 'collapsed'}>\n//                   {values.map((sub) => \n//                     <Input \n//                     item={sub.info} \n//                     index={index} \n//                     checkedState= { checkedStateSub } \n//                     handleOnChange={() => handleOnChangeSub}\n//                     /> \n//                     )}\n//             </li>\n\n                    \n    \n\n//               </div>\n//             </div>\n//         );\n//       })}\n//     </ul>\n// );\n// }\n\n// export default App;\n\nconst App = () => {\n  const [clicked, setClicked] = useState(false);\n\n  const toggle = index => {\n    if (clicked === index) {\n      //if clicked question is already active, then close it\n      return setClicked(null);\n    }\n\n    setClicked(index);\n  };\n\n  return (\n    <IconContext.Provider value={{ color: '#00FFB9', size: '25px' }}>\n      <AccordionSection>\n        <Container>\n          {Data.map((item, index) => {\n            return (\n              <>\n                <Wrap onClick={() => toggle(index)} key={index}>\n                  <h1>{item.question}</h1>\n                  <span>{clicked === index ? <FiMinus /> : <FiPlus />}</span>\n                </Wrap>\n                {clicked === index ? (\n                  <Dropdown>\n                    <p>{item.answer}</p>\n                  </Dropdown>\n                ) : null}\n              </>\n            );\n          })}\n        </Container>\n      </AccordionSection>\n    </IconContext.Provider>\n  );\n};\n\nexport default App;"],"mappings":";;;AAAA,SAAUA,QAAV,EAAoBC,WAApB,QAAwC,OAAxC;AACA,SAAUC,SAAV,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMO,MAAM,GAAGC,KAAK,IAAI;IACtB,IAAIH,OAAO,KAAKG,KAAhB,EAAuB;MACrB;MACA,OAAOF,UAAU,CAAC,IAAD,CAAjB;IACD;;IAEDA,UAAU,CAACE,KAAD,CAAV;EACD,CAPD;;EASA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEC,KAAK,EAAE,SAAT;MAAoBC,IAAI,EAAE;IAA1B,CAA7B;IAAA,uBACE,QAAC,gBAAD;MAAA,uBACE,QAAC,SAAD;QAAA,UACGC,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAOL,KAAP,KAAiB;UACzB,oBACE;YAAA,wBACE,QAAC,IAAD;cAAM,OAAO,EAAE,MAAMD,MAAM,CAACC,KAAD,CAA3B;cAAA,wBACE;gBAAA,UAAKK,IAAI,CAACC;cAAV;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,UAAOT,OAAO,KAAKG,KAAZ,gBAAoB,QAAC,OAAD;kBAAA;kBAAA;kBAAA;gBAAA,QAApB,gBAAkC,QAAC,MAAD;kBAAA;kBAAA;kBAAA;gBAAA;cAAzC;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA,GAAyCA,KAAzC;cAAA;cAAA;cAAA;YAAA,QADF,EAKGH,OAAO,KAAKG,KAAZ,gBACC,QAAC,QAAD;cAAA,uBACE;gBAAA,UAAIK,IAAI,CAACE;cAAT;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADD,GAIG,IATN;UAAA,gBADF;QAaD,CAdA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAnCD;;GAAMX,G;;KAAAA,G;AAqCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}