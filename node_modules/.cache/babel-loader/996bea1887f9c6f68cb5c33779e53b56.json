{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { listArray } from './Array';\n\nfunction App() {\n  _s();\n\n  const [checkedState, setCheckedState] = useState(new Array(listArray.length).fill(false));\n  console.log(listArray);\n  console.log(checkedState);\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n  };\n\n  setCheckedState(updatedCheckedState); //   return (\n  //     <li>\n  //     {listArray.map(( {list}, index ) => {\n  //       return(\n  //         <li key={index}>\n  //       <input \n  //         type=\"checkbox\"\n  //         id={`custom-checkbox-${index}`}\n  //         name={list.name}\n  //         value={list}\n  //         checked={checkedState[index]}\n  //         onChange={() => handleOnChange(index)} />\n  //         </li>\n  //       )\n  //     }\n  //     )}\n  //     </li>\n  //   );\n  // }\n  // return (\n  //   <div className=\"App\">\n  //     <h3>Select Toppings</h3>\n  //     <ul className=\"toppings-list\">\n  //       {toppings.map(({ name, price }, index) => {\n  //         return (\n  //           <li key={index}>\n  //             <div className=\"toppings-list-item\">\n  //               <div className=\"left-section\">\n  //                 <input\n  //                   type=\"checkbox\"\n  //                   id={`custom-checkbox-${index}`}\n  //                   name={name}\n  //                   value={name}\n  //                   checked={checkedState[index]}\n  //                   onChange={() => handleOnChange(index)}\n  //                 />\n  //                 <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n  //               </div>\n  //               <div className=\"right-section\">{getFormattedPrice(price)}</div>\n  //             </div>\n  //           </li>\n  //         );\n  //       })}\n  //       <li>\n  //         <div className=\"toppings-list-item\">\n  //           <div className=\"left-section\">Total:</div>\n  //           <div className=\"right-section\">{getFormattedPrice(total)}</div>\n  //         </div>\n  //       </li>\n  //     </ul>\n  //   </div>\n  // );\n}\n\n_s(App, \"wC5d443FWsSCbs5BIo5P9XguXZ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","listArray","App","checkedState","setCheckedState","Array","length","fill","console","log","handleOnChange","position","updatedCheckedState","map","item","index"],"sources":["C:/Users/JAN/OneDrive/Documents/code/listy/jan-olejarz-list/src/App.js"],"sourcesContent":["import {  useState  } from 'react'\nimport {  listArray } from './Array'\n\nfunction App() {\n\n  const [checkedState, setCheckedState] = useState(\n    new Array(listArray.length).fill(false)\n);\n\nconsole.log(listArray)\nconsole.log(checkedState)\n\n  const handleOnChange = (position) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n\n  );  \n  }\n  setCheckedState(updatedCheckedState);\n\n//   return (\n//     <li>\n//     {listArray.map(( {list}, index ) => {\n//       return(\n//         <li key={index}>\n//       <input \n//         type=\"checkbox\"\n//         id={`custom-checkbox-${index}`}\n//         name={list.name}\n//         value={list}\n//         checked={checkedState[index]}\n//         onChange={() => handleOnChange(index)} />\n//         </li>\n//       )\n//     }\n//     )}\n//     </li>\n//   );\n// }\n// return (\n//   <div className=\"App\">\n//     <h3>Select Toppings</h3>\n//     <ul className=\"toppings-list\">\n//       {toppings.map(({ name, price }, index) => {\n//         return (\n//           <li key={index}>\n//             <div className=\"toppings-list-item\">\n//               <div className=\"left-section\">\n//                 <input\n//                   type=\"checkbox\"\n//                   id={`custom-checkbox-${index}`}\n//                   name={name}\n//                   value={name}\n//                   checked={checkedState[index]}\n//                   onChange={() => handleOnChange(index)}\n//                 />\n//                 <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n//               </div>\n//               <div className=\"right-section\">{getFormattedPrice(price)}</div>\n//             </div>\n//           </li>\n//         );\n//       })}\n//       <li>\n//         <div className=\"toppings-list-item\">\n//           <div className=\"left-section\">Total:</div>\n//           <div className=\"right-section\">{getFormattedPrice(total)}</div>\n//         </div>\n//       </li>\n//     </ul>\n//   </div>\n// );\n}\n\nexport default App;"],"mappings":";;AAAA,SAAUA,QAAV,QAA2B,OAA3B;AACA,SAAUC,SAAV,QAA2B,SAA3B;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAC9C,IAAIK,KAAJ,CAAUJ,SAAS,CAACK,MAApB,EAA4BC,IAA5B,CAAiC,KAAjC,CAD8C,CAAhD;EAIFC,OAAO,CAACC,GAAR,CAAYR,SAAZ;EACAO,OAAO,CAACC,GAAR,CAAYN,YAAZ;;EAEE,MAAMO,cAAc,GAAIC,QAAD,IAAc;IACnC,MAAMC,mBAAmB,GAAGT,YAAY,CAACU,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAC3CA,KAAK,KAAKJ,QAAV,GAAqB,CAACG,IAAtB,GAA6BA,IADH,CAA5B;EAID,CALD;;EAMAV,eAAe,CAACQ,mBAAD,CAAf,CAfa,CAiBf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACC;;GArEQV,G;;KAAAA,G;AAuET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}