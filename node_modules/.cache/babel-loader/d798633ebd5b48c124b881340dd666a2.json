{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAN\\\\OneDrive\\\\Documents\\\\code\\\\listy\\\\jan-olejarz-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { listArray } from './Arrays';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [checkedState, setCheckedState] = useState(new Array(listArray.length).fill(false));\n\n  const handleOnChange = props => {\n    const updatedCheckedState = checkedState.map((item, index) => index === props ? !item : item);\n    setCheckedState(updatedCheckedState);\n  };\n\n  const handleOnChangeSub = props => {\n    console.log('hi');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"toppings-list\",\n      children: listArray.data.map((_ref, index) => {\n        let {\n          name,\n          values\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toppings-list-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-section\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                item: name,\n                index: index,\n                checkedState: checkedState,\n                handleOnChange: () => handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 15\n              }, this), values.map(sub => /*#__PURE__*/_jsxDEV(Input, {\n                item: sub.info,\n                index: index,\n                checkedState: checkedState,\n                handleOnChange: () => handleOnChangeSub\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"wC5d443FWsSCbs5BIo5P9XguXZ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","listArray","Input","App","checkedState","setCheckedState","Array","length","fill","handleOnChange","props","updatedCheckedState","map","item","index","handleOnChangeSub","console","log","data","name","values","sub","info"],"sources":["C:/Users/JAN/OneDrive/Documents/code/listy/jan-olejarz-list/src/App.js"],"sourcesContent":["import {  useState  } from 'react'\nimport {  listArray } from './Arrays'\nimport Input from './Input'\n\nfunction App() {\n\n  const [checkedState, setCheckedState] = useState(\n    new Array(listArray.length).fill(false)\n);\n\n  const handleOnChange = (props) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === props ? !item : item\n  ); \n\n  setCheckedState(updatedCheckedState);\n\n  }\n\n  const handleOnChangeSub = (props) => {\n    console.log('hi')\n  }\n\n\nreturn (\n  <div className=\"App\">\n    <ul className=\"toppings-list\">\n      {listArray.data.map(({ name, values }, index) => {\n        return (\n          <li key={index}>\n            <div className=\"toppings-list-item\">\n              <div className=\"left-section\">\n               \n              <Input \n                  item={name} \n                  index={index} \n                  checkedState={checkedState} \n                  handleOnChange={() => handleOnChange}\n              />      \n                  {values.map((sub) => \n                    <Input \n                        item={sub.info} \n                        index={index} \n                        checkedState={checkedState} \n                        handleOnChange={() => handleOnChangeSub}\n                    /> \n                  )}\n\n              </div>\n            </div>\n          </li>      \n        );\n      })}\n    </ul>\n  </div>\n);\n}\n\nexport default App;"],"mappings":";;;AAAA,SAAUA,QAAV,QAA2B,OAA3B;AACA,SAAUC,SAAV,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAC9C,IAAIM,KAAJ,CAAUL,SAAS,CAACM,MAApB,EAA4BC,IAA5B,CAAiC,KAAjC,CAD8C,CAAhD;;EAIA,MAAMC,cAAc,GAAIC,KAAD,IAAW;IAChC,MAAMC,mBAAmB,GAAGP,YAAY,CAACQ,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAC3CA,KAAK,KAAKJ,KAAV,GAAkB,CAACG,IAAnB,GAA0BA,IADA,CAA5B;IAIFR,eAAe,CAACM,mBAAD,CAAf;EAEC,CAPD;;EASA,MAAMI,iBAAiB,GAAIL,KAAD,IAAW;IACnCM,OAAO,CAACC,GAAR,CAAY,IAAZ;EACD,CAFD;;EAKF,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAI,SAAS,EAAC,eAAd;MAAA,UACGhB,SAAS,CAACiB,IAAV,CAAeN,GAAf,CAAmB,OAAmBE,KAAnB,KAA6B;QAAA,IAA5B;UAAEK,IAAF;UAAQC;QAAR,CAA4B;QAC/C,oBACE;UAAA,uBACE;YAAK,SAAS,EAAC,oBAAf;YAAA,uBACE;cAAK,SAAS,EAAC,cAAf;cAAA,wBAEA,QAAC,KAAD;gBACI,IAAI,EAAED,IADV;gBAEI,KAAK,EAAEL,KAFX;gBAGI,YAAY,EAAEV,YAHlB;gBAII,cAAc,EAAE,MAAMK;cAJ1B;gBAAA;gBAAA;gBAAA;cAAA,QAFA,EAQKW,MAAM,CAACR,GAAP,CAAYS,GAAD,iBACV,QAAC,KAAD;gBACI,IAAI,EAAEA,GAAG,CAACC,IADd;gBAEI,KAAK,EAAER,KAFX;gBAGI,YAAY,EAAEV,YAHlB;gBAII,cAAc,EAAE,MAAMW;cAJ1B;gBAAA;gBAAA;gBAAA;cAAA,QADD,CARL;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF,GAASD,KAAT;UAAA;UAAA;UAAA;QAAA,QADF;MAwBD,CAzBA;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgCC;;GApDQX,G;;KAAAA,G;AAsDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}